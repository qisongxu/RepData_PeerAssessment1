qwe$getmean
source('~/R/assign0.R')
source('~/R/assign0.R')
source('~/R/assign_mean.R')
source('~/R/assign_mean.R')
source('~/R/assign_mean.R')
source('~/R/assign_mean.R')
qwe
qwe$getmean
makeVector2(1:5)
qwe <- makeVector2(1:10)
qwe$get()
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachemean2.R')
source('~/R/cachemean2.R')
source('~/R/cachemean2.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
?inv
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
Variable inv_x : Inverse matrix X
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
qwe <- cachematrix(diag(3))
source('~/R/cachematrix.R')
qwe <- makeCacheMatrix(diag(3))
qwe$get_matrix()
zxc <-qwe$get_matrix()
zxc
qwe <- makeCacheMatrix(2*diag(3))
zxc
2*diag(3)
qwe <- makeCacheMatrix(2*diag(3))
zxc <-qwe$get_matrix()
zxc
solve(z)
solve(zxc)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
qwe#get()
qwe#get_matrix()
qwe$get_matrix()
qwe$get_inv_matrix()
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
qwe
qwe$get_matrix()
asd <- cacheSolve(qwe)
asd
asd <- cacheSolve(qwe)
cacheSolve(qwe)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
zxxc <- diag(3)
zxc <- diag(3)
View(zxxc)
View(zxxc)
View(zxxc)
View(zxxc)
View(zxxc)
View(zxxc)
View(zxxc)
rm(zxxv)
rm(zxxc)
qwe <- makeCacheMatrix(5*zxc)
qwe$get_matrix
qwe$get_matrix()
cacheSolve(qwe)
source('~/R/cachematrix.R')
cacheSolve(qwe)
cacheSolve(qwe)
class(cachematrix)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
dim(zxc)
dim(zxc'')
dim(zxc')
)
()
)
')'
nrow(zxc)
ncol(zxc)
zxc2 <- zxc[1:2,]
zxc2
zxc3 <- zxc
zxc3
zxc3[3,3]<-0
zxc3
source('~/R/cachematrix.R')
qwe1 <- makeCacheMatrix(zxc)
qwe1$get_matrix()
qwe2 <- makeCacheMatrix(zxc2)
qwe2
rm(qwe2)
qwe2
qwe2 <- makeCacheMatrix(zxc2)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
rm(qwe2)
qwe2 <- makeCacheMatrix(zxc2)
source('~/R/cachematrix.R')
rm(qwe2)
qwe2 <- makeCacheMatrix(zxc2)
source('~/R/cachematrix.R')
rm(qwe2)
qwe2 <- makeCacheMatrix(zxc2)
qwe2 <- makeCacheMatrix(zxc)
rm(qwe2)
qwe2 <- makeCacheMatrix(zxc2)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
qwe2 <- makeCacheMatrix(zxc2)
source('~/R/cachematrix.R')
qwe2 <- makeCacheMatrix(zxc2)
qwe1$get_matrix
()
qwe1$get_matrix()
qwe3 <- makeCacheMatrix(zxc3)
solve(zxc3)
cacheSolve(qwe3)
det(zxc)
det(zxc3)
det(zxc2)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
cacheSolve(qwe3w)
cacheSolve(1:3)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
rm(qwe3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc3)
source('~/R/cachematrix.R')
qwe3 <- makeCacheMatrix(zxc)
qwe3 <- makeCacheMatrix(asd)
cacheSolve(asd)
cacheSolve(qwe3)
source('~/R/cachematrix.R')
cacheSolve(qwe3)
source('~/R/cachematrix.R')
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
source('C:/Users/Qisong/AppData/Local/Temp/RtmpCCrKwj/boring_function.R')
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
7%%3
7%%2
7%%4
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
sum(c(12))
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
x <- c(1,4)
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Good","Afternoon")
source('C:/Users/Qisong/AppData/Local/Temp/RtmpCCrKwj/mad_libs.R')
source('C:/Users/Qisong/AppData/Local/Temp/RtmpCCrKwj/mad_libs.R')
submit()
mad_libs(c("school","clever","computer"))
source('C:/Users/Qisong/AppData/Local/Temp/RtmpCCrKwj/bin_op.R')
submit()
"I" %p% "love" %p% "R!"
?plot
?line
?Devices
install.packages("sqldf")
?htter
?httr
library()
install.packages("httr")
library()
source('~/.active-rstudio-document')
source('script_httr.R')
source('script_httr.R')
source('script_httr.R')
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
source('~/R/script_httr.R')
library(sqldf)
acs <- read.csv("./getdata-data-ss06pid.csv", header=T, sep=",")
?read.csv
acs <- read.csv("getdata-data-ss06pid.csv", header=T, sep=",")
View(acs)
data <-sqldf("select pwgtp1 from acs where AGEP < 50")
View(data)
rm(list.files)
rm(list.files())
rm(list())
list
rm(list-ls())
rm(list=ls())
ls()
source('~/R/script_httr.R')
con
?url
source('~/R/script_httr.R')
con
hmtlCode
htmlCode
htmlCode[1]
htmlCode[181]
nchar(htmlCode[1])
nchar(htmlCode[10])
nchar(htmlCode[10 20])
nchar(htmlCode[10])
nchar(htmlCode[c(10,20)])
nchar(htmlCode[c(10,20,30,100)])
source('~/R/script_httr.R')
source('~/R/script_httr.R')
?ech
?echo
source('~/R/script_httr.R')
source('~/R/script_httr.R')
rm(list = ls())
source('~/R/script_httr.R')
source('~/R/script_httr.R')
source('~/R/script_httr.R')
View(df)
View(df)
sum(df[,4])
source('~/R/script_httr.R')
library()
install.packages("dplyr")
?arrange
library(dplyrr)
library(dplyr)
?arrange
id = sample(1:10)
id = sample(1:10)
id <- sample(1:10),id
id <- sample(1:10);id
id <- sample(1:10);id
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
Diet
list.files()
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?lline
?llines
?print.trellis()
?trellis.par.set()
?par()
?splom()
panel.lmline()
?ggplot2
library()
install.packages("ggplot2")
?ggplot2
library(ggplot2)
str(mpg)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv("path2csv",stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
View(cran)
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(-5:20)
-(5:20)
select(cran,-(X:size))
filter(cran, package =="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" |country == "IN"  )
filter(cran, size>100500,r_os == "linux-gnu")
is.nas(c(3,5,NA,10))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
View(cran2)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
View(cran3)
View(cran3)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gd = size_mb/ 2^10)
mutate(cran3, size_mb = size / 2^20,size_gd = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20,size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran)
by_package <- group_by(cran,package)
by_package
?summarize
summarize(cran,mean(size))
summarize(by_package,mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(top_counts, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unqiue)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students, sex_class, count, -grade)
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class,c("sex","class"))
View(students3)
View(students2)
View(students)
submit()
students3
?gather
submit()
?spread
View(students3)
View(students3)
View(students4)
submit()
extract_numeric("class5")
?mutate
?mutate
?mutate
submit()
?mutate
library(dplyr)
?mutate
submit()
submit()
submit()
submit()
submit()
students
students4
submit()
submit()
View(students4)
submit()
passed
failed
passed <- mutate(passed,status)
passed <- mutate(passed)
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
packageVersion('dplyr')
bind_rows(passed,failed)
sat
submit()
submit()
submit()
setwd('C:\Users\Qisong\Documents\Git\RepData_PeerAssessment1')
setwd("'"C:\Users\Qisong\Documents\Git\RepData_PeerAssessment1")
setwd("C:\Users\Qisong\Documents\Git\RepData_PeerAssessment1")
getwd()
ata2, plot(interval, steps/480, col = date, xlab = "interval", ylab =
activity_interval <- na.omit(activity)
activity_interval$interval <- as.factor(activity_interval$interval)
# Group by interval factor and take average
activity_interval <- na.omit(activity)
library(ggplot2)
library(dplyr)
library(gridExtra)
```
(2) Read in the data
```{r fileload}
# Read csv file
activity<-read.csv("./activity.csv", header=TRUE, sep=",", )
# Convert Date column from Factor to Date class
activity$date<-as.Date(activity$date)
setwd("~/Git/RepData_PeerAssessment1")
library(ggplot2)
library(dplyr)
library(gridExtra)
```
(2) Read in the data
```{r fileload}
# Read csv file
activity<-read.csv("./activity.csv", header=TRUE, sep=",", )
activity_interval <- na.omit(activity)
activity_interval$interval <- as.factor(activity_interval$interval)
# Group by interval factor and take average
activity_inter <- activity_interval %.%
group_by(interval) %.%
summarise (step.mean = mean(steps))
activity_inter
plot(activity_inter$step.mean)
plot(activity_inter$step.mean,type = "l")
View(activity_inter)
View(activity_inter)
activity_interval <- na.omit(activity)
activity_interval$interval <- as.factor(activity_interval$interval)
# Group by interval factor and take average
activity_inter <- activity_interval %>%
group_by(interval) %>%
summarise (step.mean = mean(steps))
activity_inter
with(activity_inter, plot(interval, step.mean, col = date, xlab = "interval",ylab = "average of steps per day"))
with(activity_inter, plot(interval, step.mean, xlab = "interval",ylab = "average of steps per day"))
?which.max
activity_inter[which.max(activity_inter.mean),]
activity_inter[which.max(activity_inter$step.mean),]
